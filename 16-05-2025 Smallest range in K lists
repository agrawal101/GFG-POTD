Problem link - https://www.geeksforgeeks.org/problems/find-smallest-range-containing-elements-from-k-lists/1?_gl=1*1gsz8kq*_up*MQ..&gclid=Cj0KCQjwh_i_BhCzARIsANimeoEIpPMx-bYqTx5XofjLvqo6p17z0hEUHvkOxyfrbAJjglEDwaA0fOsaAsmREALw_wcB

class Solution {
    public ArrayList<Integer> findSmallestRange(int[][] arr) {
        // code here
        PriorityQueue<int[]> pq = new PriorityQueue<>((a,b)->Integer.compare(a[0],b[0]));
        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;
        for(int i = 0;i<arr.length;i++)
        {
            pq.add(new int[]{arr[i][0],i,0});
            max = Math.max(max,arr[i][0]);
        }
        ArrayList<Integer> ans= new ArrayList<>();
        ans.add(-100000);
        ans.add(100000);
        int idx = 0;
        int lstidx = 0;
        while(!pq.isEmpty())
        {
            int temp[] = pq.poll();
            min = temp[0];
            lstidx = temp[1];
            idx = temp[2];
            if(max-min < ans.get(1)-ans.get(0))
            {
                ans.set(0,min);
                ans.set(1,max);
            }
            if(idx+1<arr[lstidx].length){
                pq.add(new int[]{arr[lstidx][idx+1],lstidx,idx+1});
                max = Math.max(max,arr[lstidx][idx+1]);
            }
            else
            break;
        }
        return ans;
    }
}
