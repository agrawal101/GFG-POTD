Problem link - https://www.geeksforgeeks.org/problems/unique-paths-in-a-grid--170647/1?_gl=1*1thpwto*_up*MQ..&gclid=Cj0KCQjwh_i_BhCzARIsANimeoEIpPMx-bYqTx5XofjLvqo6p17z0hEUHvkOxyfrbAJjglEDwaA0fOsaAsmREALw_wcB

class Solution {
    public int uniquePaths(int[][] grid) {
        // code here
        int n = grid.length;
        int m = grid[0].length;
        if(grid[0][0]==1 || grid[n-1][m-1]==1)
        return 0;
        int dp[][] = new int[n][m];
        for(int ar[]:dp)
        Arrays.fill(ar,-1);
        return rec(grid,0,0,n,m,dp);
    }
    public int rec(int grid[][],int i,int j,int n,int m,int dp[][])
    {
        if(i>=n || j>=m || grid[i][j]==1)
        return 0;
        if(i==n-1 && j==m-1)
        return 1;
        if(dp[i][j]!=-1)
        return dp[i][j];
        int down = rec(grid,i+1,j,n,m,dp);
        int right = rec(grid,i,j+1,n,m,dp);
        return dp[i][j] = right+down;
    }
};
