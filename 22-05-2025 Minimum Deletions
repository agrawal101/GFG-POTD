Problem link - https://www.geeksforgeeks.org/problems/minimum-deletitions1648/1?_gl=1*1rq4953*_up*MQ..&gclid=Cj0KCQjwh_i_BhCzARIsANimeoEIpPMx-bYqTx5XofjLvqo6p17z0hEUHvkOxyfrbAJjglEDwaA0fOsaAsmREALw_wcB

Lowest palindromic subsequence

class Solution {
    static int minDeletions(String s) {
        // code here
        String r = "";
        StringBuilder sb = new StringBuilder();
        sb.append(s);
        sb.reverse();
        r = sb.toString();
        int n = s.length();
        int dp[][] = new int[n][n];
        for(int ar[]:dp)
        Arrays.fill(ar,-1);
        return s.length()-lps(s,r,0,0,dp);
    }
    public static int lps(String s,String r,int i,int j,int dp[][])
    {
        if(i==s.length() || j==r.length())
        return 0;
        if(dp[i][j]!=-1)
        return dp[i][j];
        int take = 0;
        int not = 0;
        if(s.charAt(i)==r.charAt(j))
        {
            take = 1+lps(s,r,i+1,j+1,dp);
        }
        else
        {
            not = Math.max(lps(s,r,i+1,j,dp),lps(s,r,i,j+1,dp));
        }
        return dp[i][j] = Math.max(take,not);
    }
}
